                                                 OPERATORS AND CONDITIONALS

 Unary Operator:-  ++ Pre increment,   -- Post decrement
  pre incr me phele value increment hogi fir value print hogi
  post incr me phele value print hogi fir increment hoga
  let c = 4;
  console.log(c++);   
same with post & pre decrement --

Assignment Operator:- =,  +=,  -=,  *=,  /=
  let a = 2;
  a = a + 10;  same as  a += 10;  O/P-> 12
  a = a - 10;  same as  a -= 10;  O/P-> 8
  a = a * 10;  same as  a *= 10;  O/P-> 20
  a = a / 10;  same as  a /= 10;  O/P-> 5


Comparison Operator:-  <,  >,  ==,  >=,  <=,  !=,  ===,  !==
there o/p is always in True or False.

Strict Equality v/s Loose Equality
  - Strict equality is denoted by '==='. When we use strict equality operator, both the data-type and the value are checked to determine equality, and it returns a boolean answer.
  - Loose equality is denoted by '=='. When we use loose equality operator, only the value is checked to determine equality, and it returns a boolean answer.

Ternary operator:- (Conditional operator)
 three part hote hai- condition, statement, to execute if the condition is true and the statement to execute if the condition is false.
 Syntax-> (condition) ? (statement1) : (statement2);

Logical operator:-
AND(&&)
 sb true toh true return karega
 or agar ek bhi false hai toh false return karega
OR(||)
 agar koi bhi ek true hai toh true return karega
 or agar sb false hai toh false return karega
NOT(!)
 true hai toh false return karega
 false hai toh true return karega.

Working With Non - boolean:-
(false && 'dutta')     false
(false || 3)           true
(true || "Vaibhav")    true

              Non boolean
Truthy                             Falsey 
anything which                   undefined
is not                            null
falsey                             0
                                  false
                                  NaN
                                  ' '

Short Circuiting:-
The logical AND expression is a short-circuit operator. As each operand is converted to a boolean, if the result of one conversion is found to be false, the AND operator stops and returns the original value of that falsy operand; it does not evaluate any of the remaining operands.
  Syntax-> (false || true || true || false);

BitWise Operator:-
Not(~): bit level par fill karta hai
left shift (<<) eg., 5 << 2 mean 2 se multiple hoga 5 * 2 * 2= 20
right shift (>>) eg,. 10 >> 3 mean 2 ki power 3 se divide ho jayega 10 / 2^3.


                             Conditionals 
if-else
if
if-else-if
switch                                   

                            